@mixin setJustify($alignments...) {
  @for $i from 0 to length($alignments) {
    .justify-#{nth($alignments, $i + 1)} {
      justify-content: #{nth($alignments, $i + 1)};
    }
  }
}

@mixin setItems($alignments...) {
  @for $i from 0 to length($alignments) {
    .items-#{nth($alignments, $i + 1)} {
      align-items: #{nth($alignments, $i + 1)};
    }
  }
}

@mixin setRounded($rounded: 0.25rem) {
  .rounded-sm {
    border-radius: calc($rounded / 2);
  }
  .rounded {
    border-radius: $rounded;
  }
  .rounded-lg {
    border-radius: calc($rounded * 2);
  }
  .rounded-full {
    border-radius: 50%;
  }
}

@mixin setTop($multiplicand...) {
  @for $i from 0 to length($multiplicand) {
    .top-#{nth($multiplicand, $i + 1)} {
      top: calc(#{nth($multiplicand, $i + 1)} * 0.25rem);
    }
  }
}

@mixin setRight($multiplicand...) {
  @for $i from 0 to length($multiplicand) {
    .right-#{nth($multiplicand, $i + 1)} {
      right: calc(#{nth($multiplicand, $i + 1)} * 0.25rem);
    }
  }
}

@mixin setBottom($multiplicand...) {
  @for $i from 0 to length($multiplicand) {
    .bottom-#{nth($multiplicand, $i + 1)} {
      bottom: calc(#{nth($multiplicand, $i + 1)} * 0.25rem);
    }
  }
}

@mixin setLeft($multiplicand...) {
  @for $i from 0 to length($multiplicand) {
    .left-#{nth($multiplicand, $i + 1)} {
      left: calc(#{nth($multiplicand, $i + 1)} * 0.25rem);
    }
  }
}

@mixin setPosition($positions...) {
  @for $i from 0 to length($positions) {
    .#{nth($positions, $i + 1)} {
      position: #{nth($positions, $i + 1)};
    }
  }
}
